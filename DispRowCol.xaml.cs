using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Shapes;

namespace WpfApp1
{
    /// <summary>
    /// DispRowCol.xaml の相互作用ロジック
    /// </summary>
    public partial class DispRowCol : Window
    {


        //  カラーバーのRGB値の求め方: https://scottplot.net/cookbook/4.1/colormaps/
        
        //  カラーバー turbo
        Byte[,] turbo_rgb = new byte[256, 3] {
            {49,25,63},{50,27,68},{51,29,74},{52,31,80},{53,34,86},{54,36,92},{55,38,97},{56,40,103},{57,43,109},{58,45,115},{59,47,120},{60,50,126},{61,52,131},{62,54,137},{63,56,142},{64,59,148},
            {65,61,153},{66,63,158},{67,66,163},{68,68,168},{69,70,173},{70,72,178},{70,75,183},{71,77,188},{72,79,192},{72,82,196},{73,84,201},{74,86,205},{74,89,209},{75,91,213},{75,93,217},{76,95,220},
            {76,98,224},{76,100,227},{76,102,230},{77,105,233},{77,107,236},{77,109,239},{77,111,241},{77,114,243},{77,116,245},{77,118,247},{76,121,249},{76,123,250},{76,125,252},{75,128,253},{75,130,254},{74,132,254},
            {74,135,255},{73,137,255},{72,139,255},{72,142,255},{71,144,254},{70,146,253},{69,148,252},{67,151,251},{66,153,249},{65,155,248},{64,158,246},{62,160,244},{61,162,242},{60,165,239},{58,167,237},{57,169,234},
            {55,171,231},{54,174,228},{52,176,225},{51,178,221},{49,180,218},{48,182,214},{46,185,211},{45,187,207},{43,189,203},{42,191,199},{40,193,195},{39,195,191},{37,197,187},{36,199,183},{35,201,178},{33,203,174},
            {32,205,170},{31,207,166},{30,209,161},{29,211,157},{28,213,153},{27,215,148},{27,217,144},{26,218,140},{25,220,135},{25,222,131},{24,223,127},{24,225,123},{24,227,119},{24,228,115},{24,230,111},{24,231,107},
            {25,233,103},{25,234,100},{26,235,96},{26,237,93},{27,238,90},{28,239,86},{30,241,84},{31,242,81},{32,243,78},{34,244,75},{36,245,73},{38,246,71},{40,247,69},{42,247,67},{45,248,65},{47,249,63},
            {50,250,61},{53,250,60},{55,251,58},{58,252,57},{61,252,56},{64,253,55},{68,253,54},{71,253,53},{74,254,52},{78,254,51},{81,254,51},{85,254,50},{89,255,50},{92,255,49},{96,255,49},{100,255,49},
            {104,255,49},{108,255,49},{112,254,49},{115,254,49},{119,254,49},{123,254,49},{127,253,49},{131,253,49},{135,252,50},{139,252,50},{143,251,50},{147,251,51},{151,250,51},{155,249,51},{159,248,52},{163,248,52},
            {166,247,53},{170,246,53},{174,245,54},{177,244,54},{181,243,55},{184,242,55},{188,240,56},{191,239,56},{194,238,57},{198,237,58},{201,235,58},{204,234,58},{206,232,59},{209,231,59},{212,229,60},{215,227,60},
            {217,226,61},{220,224,61},{222,222,61},{224,220,62},{226,218,62},{228,217,62},{230,215,62},{232,213,63},{234,211,63},{236,209,63},{238,206,63},{239,204,64},{241,202,64},{242,200,64},{243,198,64},{245,196,64},
            {246,193,64},{247,191,64},{248,189,64},{249,186,64},{250,184,64},{250,182,64},{251,179,64},{251,177,64},{252,174,64},{252,172,64},{253,169,64},{253,167,63},{253,164,63},{253,162,63},{253,159,63},{253,157,62},
            {253,154,62},{253,152,62},{253,149,61},{252,147,61},{252,144,61},{251,141,60},{251,139,60},{250,136,59},{249,134,59},{248,131,58},{248,129,58},{247,126,57},{246,124,57},{244,121,56},{243,118,55},{242,116,54},
            {241,113,54},{239,111,53},{238,108,52},{236,106,51},{235,103,51},{233,101,50},{231,98,49},{230,96,48},{228,93,47},{226,91,46},{224,88,45},{222,86,44},{220,84,43},{218,81,42},{216,79,41},{214,76,40},
            {211,74,39},{209,71,38},{207,69,37},{204,66,36},{202,64,34},{200,62,33},{197,59,32},{195,57,31},{192,54,30},{189,52,28},{187,50,27},{184,47,26},{182,45,25},{179,42,23},{176,40,22},{173,38,21},
            {171,35,20},{168,33,18},{165,30,17},{162,28,16},{159,26,14},{157,23,13},{154,21,12},{151,18,10},{148,16,9},{145,14,8},{142,11,6},{139,9,5},{136,7,4},{133,4,2},{130,2,1},{128,0,0}
        };

        //  カラーバー blues
        Byte[,] blues_rgb = new byte[256,3] {
            {0,38,85},{0,38,86},{0,39,88},{0,40,89},{1,41,91},{1,42,93},{1,43,94},{2,44,96},{2,45,97},{2,46,99},{3,47,100},{3,48,102},{3,48,104},{3,49,105},{4,50,107},{4,51,108},
            {4,52,110},{5,53,112},{5,54,113},{5,55,115},{6,56,116},{6,57,118},{6,58,119},{7,58,121},{7,59,122},{7,60,124},{8,61,126},{8,62,127},{8,63,129},{8,64,130},{9,65,132},{9,66,133},
            {9,67,135},{10,68,136},{10,69,138},{10,70,139},{11,70,141},{11,71,142},{11,72,143},{12,73,145},{12,74,146},{12,75,148},{13,76,149},{13,77,151},{13,78,152},{14,79,153},{14,80,155},{14,81,156},
            {15,82,157},{15,83,159},{15,84,160},{16,85,162},{16,85,163},{16,86,164},{16,87,165},{17,88,167},{17,89,168},{18,90,169},{18,91,171},{18,92,172},{19,93,173},{19,94,174},{19,95,175},{20,96,177},
            {20,97,178},{20,98,179},{21,99,180},{21,100,181},{22,101,182},{22,102,184},{22,103,185},{23,104,186},{23,105,187},{24,105,188},{24,106,189},{25,107,190},{25,108,191},{26,109,192},{26,110,193},{27,111,194},
            {27,112,195},{28,113,196},{28,114,197},{29,115,198},{30,116,199},{30,117,200},{31,118,201},{31,118,202},{32,119,203},{33,120,203},{34,121,204},{34,122,205},{35,123,206},{36,124,207},{37,125,208},{37,126,208},
            {38,126,209},{39,127,210},{40,128,211},{41,129,211},{42,130,212},{43,131,213},{44,132,214},{44,132,214},{45,133,215},{47,134,215},{48,135,216},{49,136,217},{50,136,217},{51,137,218},{52,138,219},{53,139,219},
            {54,140,220},{55,140,220},{57,141,221},{58,142,221},{59,143,222},{60,143,222},{62,144,223},{63,145,223},{64,146,224},{66,146,224},{67,147,225},{68,148,225},{70,149,225},{71,149,226},{72,150,226},{74,151,227},
            {75,152,227},{76,152,227},{78,153,228},{79,154,228},{81,154,228},{82,155,229},{84,156,229},{85,157,229},{87,157,230},{88,158,230},{89,159,230},{91,159,231},{92,160,231},{94,161,231},{95,162,232},{97,162,232},
            {98,163,232},{100,164,232},{101,164,233},{103,165,233},{104,166,233},{106,167,234},{107,167,234},{109,168,234},{110,169,234},{112,170,235},{113,170,235},{114,171,235},{116,172,235},{117,172,235},{119,173,236},{120,174,236},
            {122,175,236},{123,175,236},{124,176,237},{126,177,237},{127,178,237},{129,178,237},{130,179,237},{131,180,238},{133,181,238},{134,181,238},{136,182,238},{137,183,238},{138,184,239},{140,184,239},{141,185,239},{143,186,239},
            {144,187,239},{145,188,240},{147,188,240},{148,189,240},{150,190,240},{151,191,240},{152,192,241},{154,192,241},{155,193,241},{156,194,241},{158,195,241},{159,196,241},{161,196,242},{162,197,242},{163,198,242},{165,199,242},
            {166,200,242},{167,200,243},{169,201,243},{170,202,243},{171,203,243},{173,204,243},{174,204,243},{176,205,244},{177,206,244},{178,207,244},{180,208,244},{181,209,244},{183,210,245},{184,210,245},{185,211,245},{187,212,245},
            {188,213,245},{189,214,245},{191,215,246},{192,215,246},{194,216,246},{195,217,246},{196,218,246},{198,219,247},{199,220,247},{201,221,247},{202,222,247},{203,222,247},{205,223,248},{206,224,248},{208,225,248},{209,226,248},
            {210,227,248},{212,228,248},{213,229,249},{215,229,249},{216,230,249},{218,231,249},{219,232,249},{220,233,250},{222,234,250},{223,235,250},{225,236,250},{226,237,250},{227,237,251},{229,238,251},{230,239,251},{232,240,251},
            {233,241,251},{235,242,252},{236,243,252},{237,244,252},{239,245,252},{240,245,252},{242,246,253},{243,247,253},{245,248,253},{246,249,253},{247,250,253},{249,251,254},{250,252,254},{252,253,254},{253,254,254},{255,255,255},
        };


        //  カラーバー grayscale
        Byte[,] grayscale_rgb = new byte[256, 3] {
            {0,0,0},{1,1,1},{2,2,2},{3,3,3},{4,4,4},{5,5,5},{6,6,6},{7,7,7},{8,8,8},{9,9,9},{10,10,10},{11,11,11},{12,12,12},{13,13,13},{14,14,14},{15,15,15},
            {16,16,16},{17,17,17},{18,18,18},{19,19,19},{20,20,20},{21,21,21},{22,22,22},{23,23,23},{24,24,24},{25,25,25},{26,26,26},{27,27,27},{28,28,28},{29,29,29},{30,30,30},{31,31,31},
            {32,32,32},{33,33,33},{34,34,34},{35,35,35},{36,36,36},{37,37,37},{38,38,38},{39,39,39},{40,40,40},{41,41,41},{42,42,42},{43,43,43},{44,44,44},{45,45,45},{46,46,46},{47,47,47},
            {48,48,48},{49,49,49},{50,50,50},{51,51,51},{52,52,52},{53,53,53},{54,54,54},{55,55,55},{56,56,56},{57,57,57},{58,58,58},{59,59,59},{60,60,60},{61,61,61},{62,62,62},{63,63,63},
            {64,64,64},{65,65,65},{66,66,66},{67,67,67},{68,68,68},{69,69,69},{70,70,70},{71,71,71},{72,72,72},{73,73,73},{74,74,74},{75,75,75},{76,76,76},{77,77,77},{78,78,78},{79,79,79},
            {80,80,80},{81,81,81},{82,82,82},{83,83,83},{84,84,84},{85,85,85},{86,86,86},{87,87,87},{88,88,88},{89,89,89},{90,90,90},{91,91,91},{92,92,92},{93,93,93},{94,94,94},{95,95,95},
            {96,96,96},{97,97,97},{98,98,98},{99,99,99},{100,100,100},{101,101,101},{102,102,102},{103,103,103},{104,104,104},{105,105,105},{106,106,106},{107,107,107},{108,108,108},{109,109,109},{110,110,110},{111,111,111},
            {112,112,112},{113,113,113},{114,114,114},{115,115,115},{116,116,116},{117,117,117},{118,118,118},{119,119,119},{120,120,120},{121,121,121},{122,122,122},{123,123,123},{124,124,124},{125,125,125},{126,126,126},{127,127,127},
            {128,128,128},{129,129,129},{130,130,130},{131,131,131},{132,132,132},{133,133,133},{134,134,134},{135,135,135},{136,136,136},{137,137,137},{138,138,138},{139,139,139},{140,140,140},{141,141,141},{142,142,142},{143,143,143},
            {144,144,144},{145,145,145},{146,146,146},{147,147,147},{148,148,148},{149,149,149},{150,150,150},{151,151,151},{152,152,152},{153,153,153},{154,154,154},{155,155,155},{156,156,156},{157,157,157},{158,158,158},{159,159,159},
            {160,160,160},{161,161,161},{162,162,162},{163,163,163},{164,164,164},{165,165,165},{166,166,166},{167,167,167},{168,168,168},{169,169,169},{170,170,170},{171,171,171},{172,172,172},{173,173,173},{174,174,174},{175,175,175},
            {176,176,176},{177,177,177},{178,178,178},{179,179,179},{180,180,180},{181,181,181},{182,182,182},{183,183,183},{184,184,184},{185,185,185},{186,186,186},{187,187,187},{188,188,188},{189,189,189},{190,190,190},{191,191,191},
            {192,192,192},{193,193,193},{194,194,194},{195,195,195},{196,196,196},{197,197,197},{198,198,198},{199,199,199},{200,200,200},{201,201,201},{202,202,202},{203,203,203},{204,204,204},{205,205,205},{206,206,206},{207,207,207},
            {208,208,208},{209,209,209},{210,210,210},{211,211,211},{212,212,212},{213,213,213},{214,214,214},{215,215,215},{216,216,216},{217,217,217},{218,218,218},{219,219,219},{220,220,220},{221,221,221},{222,222,222},{223,223,223},
            {224,224,224},{225,225,225},{226,226,226},{227,227,227},{228,228,228},{229,229,229},{230,230,230},{231,231,231},{232,232,232},{233,233,233},{234,234,234},{235,235,235},{236,236,236},{237,237,237},{238,238,238},{239,239,239},
            {240,240,240},{241,241,241},{242,242,242},{243,243,243},{244,244,244},{245,245,245},{246,246,246},{247,247,247},{248,248,248},{249,249,249},{250,250,250},{251,251,251},{252,252,252},{253,253,253},{254,254,254},{255,255,255},
        };




        public DispRowCol()
        {
            InitializeComponent();
        }


        //  ピクセルの温度を行(row)と列(col)で表示
        //
        //      <--------     col      --------->
        //       32  31 30  .......         3 2 1
        // row 1
        //     2
        //     3
        //     : 
        //     :
        //    24
        //
        // 対象物温度(To)の行列表示
        public void Disp_To_RowCol()
        {

            double[,] pixelTo;
            pixelTo = new double[24, 32];

            Grid_Thermo.Children.Clear();       // 全ての要素を削除

            for (Byte i = 0; i < 24; i++)   // Row0～Row24の表示
            {
                TextBlock textBlock = new TextBlock();
                textBlock.Text = "Row" + i.ToString();

                System.Windows.Controls.Grid.SetRow(textBlock, i+1);  // 配置位置
                System.Windows.Controls.Grid.SetColumn(textBlock, 0);

                Grid_Thermo.Children.Add(textBlock);
            }


            for ( Byte j = 0; j < 32; j++ )   // Col0～Col32の表示
            {
                TextBlock textBlock = new TextBlock();
                textBlock.Text = "Col" + (31 -j).ToString();

                System.Windows.Controls.Grid.SetRow(textBlock, 0);  // 配置位置
                System.Windows.Controls.Grid.SetColumn(textBlock, j+1 );

                Grid_Thermo.Children.Add(textBlock);
            }

            MainWindow.to_list.ToList();    // ObservableCollection の List化
            float t_min = MainWindow.to_list.Where(t => ((t.pixnum >= 1) && (t.pixnum <= 768))).Min(t => t.To);       //  to_list ピクセル番号 ( 1 ～ 768 )内の最低温度 d3  t.d2 >= 1以上
            float t_max = MainWindow.to_list.Where(t => ((t.pixnum >= 1) && (t.pixnum <= 768))).Max(t => t.To);       //  to_list ピクセル番号 ( 1 ～ 768 )内の最高温度


            for (Byte i = 0; i < 24; i++)            // row
            {
                for (Byte j = 0; j < 32; j++)        // col
                {
                    int pix_num = i * 32 + j + 1;         // ピクセル番号( 1 ～ 768 )

                    ToData toData = MainWindow.to_list.First(t => t.pixnum == pix_num); //  pix_numと一致する、pixDataオブジェクトを得る

                    pixelTo[i, j] = toData.To;          //  ピクセル番号の対象物の温度(To)

                    TextBlock textBlock = new TextBlock();


                    System.Windows.Controls.Grid.SetRow(textBlock, i+1);  // 配置位置
                    System.Windows.Controls.Grid.SetColumn(textBlock, 32 - j);

                    double To = pixelTo[i, j];         // 対象物の温度

                    textBlock.Text = To.ToString("F1");  // 小数点一桁

                    Byte id = (Byte)(( To - t_min) / (t_max - t_min) * 255);

                    Byte R = 0;
                    Byte G = 0;
                    Byte B = 0;

                    if (MainWindow.colorbar_type == 0)  // turbo 
                    {
                        R = turbo_rgb[id, 0];
                        G = turbo_rgb[id, 1];
                        B = turbo_rgb[id, 2];
                    }
                    else if (MainWindow.colorbar_type == 1)    // blues
                    {
                        R = blues_rgb[id, 0];
                        G = blues_rgb[id, 1];
                        B = blues_rgb[id, 2];
                    }
                    else if (MainWindow.colorbar_type == 2)    // grayscale
                    {
                        R = grayscale_rgb[id, 0];
                        G = grayscale_rgb[id, 1];
                        B = grayscale_rgb[id, 2];
                    }

                    textBlock.Background = new SolidColorBrush(Color.FromRgb( R, G, B));  // 背景色の指定

                    Grid_Thermo.Children.Add(textBlock);    // Grid_Thermo　の row,colに 温度を配置
                }
            }
        }


        // Windowが閉じられる際の処理
        private void Window_Closing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            MainWindow.rowcol_window_cnt = 0;     // 温度の行列表示用ウィンドウの表示個数のクリア

        }


    }
}
